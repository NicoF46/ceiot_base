{
	"info": {
		"_postman_id": "3fb5c2e8-8854-41d1-b167-4cb9271fd6e9",
		"name": "Dam",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Listado de dispositivos",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Returns an array\", function () {",
							"    var got = pm.response.json();",
							"    got = Array.isArray(got);",
							"    pm.expect(got).to.eql(true);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/dispositivo/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"dispositivo",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Listado de mediciones",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"Returns an array\", function () {",
							"    var got = pm.response.json();",
							"    got = Array.isArray(got);",
							"    pm.expect(got).to.eql(true);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/medicion/1/todas",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"medicion",
						"1",
						"todas"
					]
				}
			},
			"response": []
		},
		{
			"name": "Listado de mediciones de un dispositivo inexistente",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Returns an empty array\", function () {",
							"    var got = pm.response.json();",
							"    pm.expect(got).to.eql([]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/medicion/1000000/todas",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"medicion",
						"1000000",
						"todas"
					]
				}
			},
			"response": []
		},
		{
			"name": "ultima medicion",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Returns a medicion\", function () {",
							"    var got = pm.response.json();",
							"    pm.expect(Object.keys(got)).to.eql([\"medicionid\", \"fecha\", \"valor\", \"dispositivoid\"]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/medicion/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"medicion",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "ultima medicion de un dispositivo inexistente",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Returns an empty json\", function () {",
							"    var got = pm.response.text();",
							"    pm.expect(got).to.eql('');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/medicion/1000000",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"medicion",
						"1000000"
					]
				}
			},
			"response": []
		},
		{
			"name": "ultimo log de riego",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Returns a medicion\", function () {",
							"    var got = pm.response.json();",
							"    pm.expect(Object.keys(got)).to.eql([\"logriegoid\", \"apertura\", \"fecha\", \"electrovalvulaid\"]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/riego/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"riego",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Listado de logs de riego",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Returns an array\", function () {",
							"    var got = pm.response.json();",
							"    got = Array.isArray(got);",
							"    pm.expect(got).to.eql(true);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/riego/1/todas",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"riego",
						"1",
						"todas"
					]
				}
			},
			"response": []
		},
		{
			"name": "Agregar log de riego",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"apertura\": \"100\",\n    \"fecha\": \"{{CurrentDateTime}}\",\n    \"electrovalvulaid\": 1\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/riego/agregar",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"riego",
						"agregar"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"var moment = require('moment');",
					"",
					"pm.globals.set(\"CurrentDateTime\",moment().format()) ;"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}